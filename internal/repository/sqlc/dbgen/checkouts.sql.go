// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: checkouts.sql

package dbgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type BulkCreateCheckoutParams struct {
	ID            int64              `db:"id" json:"id"`
	BookingID     int64              `db:"booking_id" json:"booking_id"`
	TotalAmount   pgtype.Numeric     `db:"total_amount" json:"total_amount"`
	FinalAmount   pgtype.Numeric     `db:"final_amount" json:"final_amount"`
	PaidAmount    pgtype.Numeric     `db:"paid_amount" json:"paid_amount"`
	PaymentMethod string             `db:"payment_method" json:"payment_method"`
	CouponID      pgtype.Int8        `db:"coupon_id" json:"coupon_id"`
	CheckoutUser  pgtype.Int8        `db:"checkout_user" json:"checkout_user"`
	CreatedAt     pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

const getCheckoutByBookingID = `-- name: GetCheckoutByBookingID :one
SELECT
  ck.id,
  ck.total_amount,
  ck.final_amount,
  ck.paid_amount,
  ck.payment_method,
  ck.coupon_id,
  c.name as coupon_name,
  c.display_name as coupon_display_name,
  c.code as coupon_code,
  su.username as checkout_user,
  ck.created_at
FROM checkouts ck
LEFT JOIN coupons c ON c.id = ck.coupon_id
LEFT JOIN staff_users su ON su.id = ck.checkout_user
WHERE ck.booking_id = $1
`

type GetCheckoutByBookingIDRow struct {
	ID                int64              `db:"id" json:"id"`
	TotalAmount       pgtype.Numeric     `db:"total_amount" json:"total_amount"`
	FinalAmount       pgtype.Numeric     `db:"final_amount" json:"final_amount"`
	PaidAmount        pgtype.Numeric     `db:"paid_amount" json:"paid_amount"`
	PaymentMethod     string             `db:"payment_method" json:"payment_method"`
	CouponID          pgtype.Int8        `db:"coupon_id" json:"coupon_id"`
	CouponName        pgtype.Text        `db:"coupon_name" json:"coupon_name"`
	CouponDisplayName pgtype.Text        `db:"coupon_display_name" json:"coupon_display_name"`
	CouponCode        pgtype.Text        `db:"coupon_code" json:"coupon_code"`
	CheckoutUser      pgtype.Text        `db:"checkout_user" json:"checkout_user"`
	CreatedAt         pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

func (q *Queries) GetCheckoutByBookingID(ctx context.Context, bookingID int64) (GetCheckoutByBookingIDRow, error) {
	row := q.db.QueryRow(ctx, getCheckoutByBookingID, bookingID)
	var i GetCheckoutByBookingIDRow
	err := row.Scan(
		&i.ID,
		&i.TotalAmount,
		&i.FinalAmount,
		&i.PaidAmount,
		&i.PaymentMethod,
		&i.CouponID,
		&i.CouponName,
		&i.CouponDisplayName,
		&i.CouponCode,
		&i.CheckoutUser,
		&i.CreatedAt,
	)
	return i, err
}
