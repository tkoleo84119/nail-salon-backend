// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: coupon.sql

package dbgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const checkCouponCodeExists = `-- name: CheckCouponCodeExists :one
SELECT EXISTS(
  SELECT 1 FROM coupons
  WHERE code = $1
)
`

func (q *Queries) CheckCouponCodeExists(ctx context.Context, code string) (bool, error) {
	row := q.db.QueryRow(ctx, checkCouponCodeExists, code)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const checkCouponNameExists = `-- name: CheckCouponNameExists :one
SELECT EXISTS(
  SELECT 1 FROM coupons
  WHERE name = $1
)
`

func (q *Queries) CheckCouponNameExists(ctx context.Context, name string) (bool, error) {
	row := q.db.QueryRow(ctx, checkCouponNameExists, name)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const createCoupon = `-- name: CreateCoupon :exec
INSERT INTO coupons (
  id,
  name,
  display_name,
  code,
  discount_rate,
  discount_amount,
  is_active,
  note
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8
)
`

type CreateCouponParams struct {
	ID             int64          `db:"id" json:"id"`
	Name           string         `db:"name" json:"name"`
	DisplayName    string         `db:"display_name" json:"display_name"`
	Code           string         `db:"code" json:"code"`
	DiscountRate   pgtype.Numeric `db:"discount_rate" json:"discount_rate"`
	DiscountAmount pgtype.Numeric `db:"discount_amount" json:"discount_amount"`
	IsActive       pgtype.Bool    `db:"is_active" json:"is_active"`
	Note           pgtype.Text    `db:"note" json:"note"`
}

func (q *Queries) CreateCoupon(ctx context.Context, arg CreateCouponParams) error {
	_, err := q.db.Exec(ctx, createCoupon,
		arg.ID,
		arg.Name,
		arg.DisplayName,
		arg.Code,
		arg.DiscountRate,
		arg.DiscountAmount,
		arg.IsActive,
		arg.Note,
	)
	return err
}
