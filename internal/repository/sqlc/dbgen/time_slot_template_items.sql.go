// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: time_slot_template_items.sql

package dbgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTimeSlotTemplateItem = `-- name: CreateTimeSlotTemplateItem :one
INSERT INTO time_slot_template_items (
    id,
    template_id,
    start_time,
    end_time,
    created_at,
    updated_at
) VALUES (
    $1, $2, $3, $4, NOW(), NOW()
) RETURNING
    id,
    template_id,
    start_time,
    end_time,
    created_at,
    updated_at
`

type CreateTimeSlotTemplateItemParams struct {
	ID         int64       `db:"id" json:"id"`
	TemplateID int64       `db:"template_id" json:"template_id"`
	StartTime  pgtype.Time `db:"start_time" json:"start_time"`
	EndTime    pgtype.Time `db:"end_time" json:"end_time"`
}

func (q *Queries) CreateTimeSlotTemplateItem(ctx context.Context, arg CreateTimeSlotTemplateItemParams) (TimeSlotTemplateItem, error) {
	row := q.db.QueryRow(ctx, createTimeSlotTemplateItem,
		arg.ID,
		arg.TemplateID,
		arg.StartTime,
		arg.EndTime,
	)
	var i TimeSlotTemplateItem
	err := row.Scan(
		&i.ID,
		&i.TemplateID,
		&i.StartTime,
		&i.EndTime,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
