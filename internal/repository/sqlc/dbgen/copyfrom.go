// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package dbgen

import (
	"context"
)

// iteratorForBatchCreateSchedules implements pgx.CopyFromSource.
type iteratorForBatchCreateSchedules struct {
	rows                 []BatchCreateSchedulesParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchCreateSchedules) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchCreateSchedules) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].StoreID,
		r.rows[0].StylistID,
		r.rows[0].WorkDate,
		r.rows[0].Note,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForBatchCreateSchedules) Err() error {
	return nil
}

func (q *Queries) BatchCreateSchedules(ctx context.Context, arg []BatchCreateSchedulesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"schedules"}, []string{"id", "store_id", "stylist_id", "work_date", "note", "created_at", "updated_at"}, &iteratorForBatchCreateSchedules{rows: arg})
}

// iteratorForBatchCreateTimeSlots implements pgx.CopyFromSource.
type iteratorForBatchCreateTimeSlots struct {
	rows                 []BatchCreateTimeSlotsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchCreateTimeSlots) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchCreateTimeSlots) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].ScheduleID,
		r.rows[0].StartTime,
		r.rows[0].EndTime,
		r.rows[0].IsAvailable,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForBatchCreateTimeSlots) Err() error {
	return nil
}

func (q *Queries) BatchCreateTimeSlots(ctx context.Context, arg []BatchCreateTimeSlotsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"time_slots"}, []string{"id", "schedule_id", "start_time", "end_time", "is_available", "created_at", "updated_at"}, &iteratorForBatchCreateTimeSlots{rows: arg})
}
